#!/bin/ash

. /etc/library.sh

# read in our hardware configs
if [ -e /var/run/breakin.dat ]
then
	. /var/run/breakin.dat
fi

BINARY="xhpl.amd64"
RUNNING_JOB=""

# the top template
cat /hpl/HPL-top.txt > /hpl/HPL.dat

# we first figure out our N based on the ammount of RAM we have
N_SIZE=`/hpl/hpl_calc_n ${MEM_TOTAL}`

#	N_SIZE=`/hpl/figure_n ${HW_TOTALMEM}`
echo "${N_SIZE}         Ns" >> /hpl/HPL.dat

cat /hpl/HPL-middle.txt >> /hpl/HPL.dat

if [ "${CPU_QTY}" = "1" ]
then
	echo "1     Ps" >> /hpl/HPL.dat	
	echo "1     Qs" >> /hpl/HPL.dat	

elif [ "${CPU_QTY}" = "2" ]
then

	echo "2     Ps" >> /hpl/HPL.dat	
	echo "1     Qs" >> /hpl/HPL.dat	

elif [ "${CPU_QTY}" = "4" ]
then

	echo "2     Ps" >> /hpl/HPL.dat	
	echo "2     Qs" >> /hpl/HPL.dat	

elif [ "${CPU_QTY}" = "8" ]
then

	echo "4     Ps" >> /hpl/HPL.dat	
	echo "2     Qs" >> /hpl/HPL.dat	

elif [ "${CPU_QTY}" = "16" ]
then

	echo "4     Ps" >> /hpl/HPL.dat	
	echo "4     Qs" >> /hpl/HPL.dat	
fi
cat /hpl/HPL-bottom.txt >> /hpl/HPL.dat

echo "${CPU_MODEL}" | grep "Intel" > /dev/null 2>&1
if [ "$?" = "0" ]
then
	BINARY="xhpl.em64t"
fi


export LD_LIBRARY_PATH=/hpl/lib
cd /hpl
/mpi/bin/mpirun -np ${CPU_QTY} ${BINARY} > /tmp/hpl.log 2>&1
if [ "$?" -ne 0 ]
then
	cat /tmp/hpl.log > /errors/hpl.log
	echo "test failed possible memory or cpu errors" 
	exit 1
else
	GFLOPS=`grep ^WR /tmp/hpl.log | tail -1 | awk '{print $7}'`
	echo "MSG: Passed (${GFLOPS} GFLOPS)" 
	exit 0
fi
done
